version: "3.8"
services:
  db:
    image: mysql:8.0
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_REACTOR_CONTEXT_PROPAGATION: AUTO
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3356:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - ckt_network  # 네트워크 이름 변경

  admin:
    build:
      context: . # <--- 빌드 컨텍스트를 프로젝트 루트(.)로 변경!
      dockerfile: ./admin/Dockerfile # <--- Dockerfile 경로 명시!
#      context: ./admin
    depends_on:
      - db
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_REACTOR_CONTEXT_PROPAGATION: AUTO
      SPRING_DATASOURCE_URL: jdbc:mysql://${DB_URL}:3306/${DB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "8081:8081"
    volumes:
      - ./logs:/logs
    networks:
      - ckt_network  # 네트워크 이름 변경
    command:
      -Dprofiler.transport.grpc.collector.ip=pinpoint-collector
      -Dprofiler.collector.ip=pinpoint-collector
      -jar app.jar

  gateway:
    build:
      context: . # <--- 빌드 컨텍스트를 프로젝트 루트(.)로 변경!
      dockerfile: ./gateway/Dockerfile # <--- Dockerfile 경로 명시!
#      context: ./gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker # ${SPRING_PROFILES_ACTIVE} # docker
      SPRING_REACTOR_CONTEXT_PROPAGATION: AUTO
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - admin
    volumes:
      - ./logs:/logs
    networks:
      - ckt_network
    command:
      -Dprofiler.transport.grpc.collector.ip=pinpoint-collector
      -Dprofiler.collector.ip=pinpoint-collector
      -jar app.jar

  collector:
    build:
      context: .
      dockerfile: ./collector/Dockerfile
#      context: ./collector
    depends_on:
      - db
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_REACTOR_CONTEXT_PROPAGATION: AUTO
      SPRING_DATASOURCE_URL: jdbc:mysql://${DB_URL}:3306/${DB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8090:8090"
    volumes:
      - ./logs:/logs
    networks:
      - ckt_network
    command:
      -Dprofiler.transport.grpc.collector.ip=pinpoint-collector
      -Dprofiler.collector.ip=pinpoint-collector
      -jar app.jar


  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - ckt_network

  grafana:
    image: grafana/grafana
    ports:
      - "3333:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - ckt_network

volumes:
  db_data:
  grafana-storage:
    driver: local

networks:
  ckt_network:
    name: ckt_network
    driver: bridge
